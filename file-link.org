:PROPERTIES:
:ID:       6d66eb7e-d949-48b5-a80e-74ac53264649
:END:
#+TITLE: file link

在 Unix 文件系统中，存放文件元数据的是 inode 节点，inode 节点指向的数据块存放实际的数据，但比较特殊的是类型为目录的 inode 节点，其数据块被目录块，用于存放「目录项」：
+ 文件大小、类型都在 inode 节点中存放，但是文件的 inode 编号和文件名保存在其所属目录的目录块中
+ 目录块中的目录项指向对应的 inode 节点
+ 使用 stat 系统调用返回的链接数就是指的指向该文件对应 inode 节点的目录项的个数，只有所有指向文件 inode 节点的目录项删除后文件才会删除

#+begin_example
  .               links
  `-- a           3
      |-- 1.txt   1
      `-- b       2
#+end_example

对于上面的目录树来说：
+ 指向目录 a 的 inode 节点的目录项有：a 目录父目录中的 =a= 目录项（命名 a）、a 目录目录项中的 =.= 目录，b 目录目录项中的 =..= 目录
+ 指向文件 1.txt 的 inode 节点的目录项有：a 目录目录项中的 =1.txt= 目录项
+ 指向目录 b 的 inode 节点的目录项有：a 目录父目录中的 =b= 目录项（命名 b）、b 目录目录项中的 =.= 目录

在 Unix 系统中删除文件的系统调用也被叫做 unlink，其含义就是删除目标目录项，在所有目录项被删除前，文件数据不会删除。同时，如果所有目录项都被删除了，但是文件被进程打开了，也不会删除，而是会等待打开它的进程关闭文件或退出。
可以利用这一特性来创建进程级的临时文件，打开文件后就 unlink 文件，然后进程退出或关闭文件后就删除了。

同样，如果进程运行期间创建了很多文件，unlink 后没关闭，就会占用大量磁盘空间。df 的时候磁盘快满了但 du 却看不到大文件。这种情况下可以用 =lsof |grep -i deleted= 存在到打开了大量 deleted 的文件的进程，kill 掉释放空间。

