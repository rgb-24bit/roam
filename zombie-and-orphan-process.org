:PROPERTIES:
:ID:       CA282EFB-0C09-4164-93EA-0D067645F701
:END:
#+TITLE: Zombie and Orphan Process

在 Linux 中，新进程通常通过 fork/exec 创建，而原进程则是这些新进程的父进程，可以通过 wait/waitpid 系统调用取得子进程的终止状态。因此，在子进程终止后而父进程没有调用 wait/waitpid 前，内核中还会在进程表中保留这个进程的信息，确保如果后面父进程调用 wait/waitpid 时能够获取到终止状态。

这种进程已经终止但父进程还没调用 wait/waitpid 前的状态就叫僵尸进程，在 ps 中看到的状态就是 defunct。

而父进程比子进程先 GG 时，子进程就变成了孤儿进程。孤儿进程会被 init 进程收养，wait 这些孤儿进程，释放它们占用的系统进程表中的资源。

* 在容器中的问题
  在容器里面是，PID=1 的 init 进程通常不会去 wait 收养的孤儿进程，如果容器内创建出来了大量的孤儿僵尸进程，那么这些进程可能就没法自然回收。

