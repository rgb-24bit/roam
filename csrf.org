:PROPERTIES:
:ID:       DCF4C982-61C9-4667-8D9F-CE42DBEA34C4
:END:
#+TITLE: csrf

+ Tag :: [[id:3E52FC31-A573-4064-A2CB-DB62A7FB5DB7][HTTP]]

CSRF 利用了 Web 中用户身份验证的一个漏洞：简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的。

例子：
1. 一家银行用以运行转账操作的 URL 地址如下：https://bank.example.com/withdraw?account=AccoutName&amount=1000&for=PayeeName
2. 恶意攻击者可以在另一个网站上放置如下代码：<img src="https://bank.example.com/withdraw?account=Alice&amount=1000&for=Badman" />
3. 如果有账户名为 Alice 的用户访问了恶意站点，而她之前刚访问过银行不久，登录信息尚未过期，那么她就会损失 1000 资金

防御措施：由于 CSRF 的本质在于攻击者欺骗用户去访问自己设置的地址，所以如果要求在访问敏感数据请求时，要求用户浏览器提供不保存在 cookie 中，并且攻击者无法伪造的数据作为校验，
那么攻击者就无法再运行 CSRF 攻击。

比如：
+ 利用模板引擎在渲染时向 HTML 表格中嵌入 CSRF Token：
  #+begin_src html
    <form method="post">
      {% csrf_token %}
    </form>
  #+end_src

参考：
+ [[https://zh.wikipedia.org/wiki/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0][跨站请求伪造 - 维基百科，自由的百科全书]]

理解：
+ [[id:1B3D8120-685F-4E60-9746-F459A159E79B][cors]] 客户端对外域的防护
+ csrf 服务断对外域的防护
