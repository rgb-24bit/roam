:PROPERTIES:
:ID:       cd179549-afe0-4911-b9fc-9a0fa243f0a5
:END:
#+TITLE: why org roam

* 目录                                                    :TOC_4_gh:noexport:
- [[#在旧的模式中遇到的问题][在旧的模式中遇到的问题]]
- [[#why-org-roam][why org roam?]]
- [[#todos][Todos]]

* 在旧的模式中遇到的问题
  在接触 [[id:f7f270b1-3090-4c5f-a8eb-b425165a78ab][emacs]] 和 [[id:14aa3e1e-4ff2-45fd-a57e-6a5cfe80d726][org mode]] 不久后，就开始使用 org mode 来记录自己的笔记，几年过去，笔记也有了一定的规模，但随之也带来了一些问题：
  1. 为了分类，我按专业相关、专业无关、阅读和博客四个大类创建了四个 [[id:38d0f81b-d223-4a4c-b2c9-05e608685660][git]] 仓库来保存笔记，这为管理上带来了一定的复杂度，
     特别是不同仓库的笔记需要关联时。

  2. 在笔记最多的仓库 [[https://github.com/rgb-24bit/notebook][notebook]] 中，新增笔记逐渐变得困难。notebook 中的笔记是按 =Directory/File/Headline= 分层分类组织的，
     好处是可以很方便的建立索引，但问题是有些笔记不好分类，同时，笔记的关联关系上存在跨层跨目录的情况。

     新增笔记时就有点难以决断放到什么地方，会不会影响现有的结构。

  3. 旧的笔记难以维护，由于时间跨度比较长，有不少的大文件中的笔记在现在的我看来已经没有多少价值，但又不是完全没价值。
     文件太大，过于结构化让我清理起来也很麻烦。

  4. 新的笔记也变得倾向于短篇，集中在某个小主题上，这样的短篇笔记更适合平铺，而不是嵌套结构化。

  5. 心理上的压力。分层分类结构化的笔记驱使我去建设 *完善/完全* 的笔记，让我不自觉的去记录更多的内容，但这些内容在记录一段时间后就变得没有多少价值。

     同时，当需要修改笔记时，整体的结构性会阻止我去修改它们。
  
* why org roam?
  作为忠实的 org mode 用户，新的笔记的记录工具肯定还是会在 emacs & org mode 生态圈中寻找，自然而然就被新出现的 [[id:267cb964-8de7-4542-bc49-c1ebe5f0340b][org roam]] 所吸引。

  [[id:09228b1f-4a0c-4974-9695-0818c34c066c][roam research]] 的理念让人眼前一亮，同时 org roam server 的效果确实很唬人。但之前我在旧的模式中遇到的问题还不是很明显，
  考虑到切换成本，就暂时没有切换到 org roam。

  不过，就在前段时间 org roam 发布了 2.0 版本，同时旧的笔记维护也愈发让我难受，于是在了解了 org roam 2.0 的更新后，就决定直接切换到 org roam。
  
  好处：
  1. 新建笔记和旧笔记删除修改的心理负担降低了。

  2. 笔记的索引由 *层级分类* 切换到 *关键词* 检索，在实际的查阅笔记的场景中，按照分类由上往下查询笔记的场景其实比较少，更多的是直接 rg 关键词一把梭搜索。

     而 org roam 提供的按照 node 检索的方式相较 rg 可以过滤掉更多的无用信息。

  3. 在一个统一的仓库中管理所有笔记。

  4. 导出的效果看着很好。

* Todos
  + [ ] org roam export to static website
  + [ ] org roam capture templates
  + [ ] org roam capture protocol
  + [ ] org capture protocol
  + [ ] org ref

