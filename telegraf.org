:PROPERTIES:
:ID:       78898056-5B14-4E54-B928-FC7CC6A91886
:END:
#+TITLE: telegraf

* Metric Filtering
  telegraf 可以给每个插件配置 Selectors 和 Modifiers 来选择或修改上报的指标。

  参考：[[https://github.com/influxdata/telegraf/blob/master/docs/CONFIGURATION.md#metric-filtering][Metric Filtering]]
  
** Selectors
   |----------+--------------------|
   | 属性     | 作用               |
   |----------+--------------------|
   | namepass | 名称匹配的才上报   |
   | namedrop | 名称不匹配的才上报 |
   | tagpass  | Tag 匹配的才上报   |
   | tagdrop  | Tag 不匹配的才上报 |
   |----------+--------------------|

** Modifiers
   |------------+--------------------------|
   | 属性       | 作用                     |
   |------------+--------------------------|
   | fieldpass  | 匹配的字段才上报         |
   | fielddrop  | 不匹配的字段才上报       |
   | taginclude | 只上报指定范围的 tag     |
   | tagexclude | 只上报不在指定范围的 tag |
   |------------+--------------------------|

* outputs
  + prometheus_client ::
    监听端口支持 prometheus 来拉取数据，[[https://github.com/influxdata/telegraf/tree/master/plugins/outputs/prometheus_client][Prometheus Output Plugin]]
    #+begin_src conf
      # Configuration for the Prometheus client to spawn
      [[outputs.prometheus_client]]
        ## Address to listen on.
        listen = ":9273"
      
        ## Metric version controls the mapping from Prometheus metrics into Telegraf metrics.
        ## See "Metric Format Configuration" in plugins/inputs/prometheus/README.md for details.
        ## Valid options: 1, 2
        # metric_version = 1
      
        ## Use HTTP Basic Authentication.
        # basic_username = "Foo"
        # basic_password = "Bar"
      
        ## If set, the IP Ranges which are allowed to access metrics.
        ##   ex: ip_range = ["192.168.0.0/24", "192.168.1.0/30"]
        # ip_range = []
      
        ## Path to publish the metrics on.
        # path = "/metrics"
      
        ## Expiration interval for each metric. 0 == no expiration
        # expiration_interval = "60s"
      
        ## Collectors to enable, valid entries are "gocollector" and "process".
        ## If unset, both are enabled.
        # collectors_exclude = ["gocollector", "process"]
      
        ## Send string metrics as Prometheus labels.
        ## Unless set to false all string metrics will be sent as labels.
        # string_as_label = true
      
        ## If set, enable TLS with the given certificate.
        # tls_cert = "/etc/ssl/telegraf.crt"
        # tls_key = "/etc/ssl/telegraf.key"
      
        ## Set one or more allowed client CA certificate file names to
        ## enable mutually authenticated TLS connections
        # tls_allowed_cacerts = ["/etc/telegraf/clientca.pem"]
      
        ## Export metric collection time.
        # export_timestamp = false
    #+end_src
