:PROPERTIES:
:ID:       5A16D839-8F80-4FD8-BEE1-7ECA645015E5
:END:
#+TITLE: taskset

在 [[id:EC899B0E-E274-4D41-9712-E432C287480C][Linux]] 中可以用 taskset 命令来设置进程亲和的 CPU 列表，和基于 [[id:4A5E3169-E60E-4C81-AE7E-18D3BDE8B86A][cgroups]] 的 [[id:D65FCB30-A5E1-45F8-B91B-95A56389E35C][cpusets]] 不一样，cpusets 更多是隔离，将进程划分在不同的 group 下，不同 group 互不干扰，可以设置独占。
而 taskset 只是设置了进程亲和的 CPU，不影响其他进程。

命令使用：
#+begin_src sh
  taskset -p pid            # 以掩码形式列出进程亲和的 CPU
  taskset -p mask pid       # 以掩码形式指定进程亲和的 CPU
  taskset -cp pid           # 以列表形式列出进程亲和的 CPU
  taskset -cp cpu-list pid  # 以列表形式指定进程亲和的 CPU
#+end_src

参考：
+ [[https://serverfault.com/questions/625146/difference-between-taskset-and-cpuset][central processing unit - difference between taskset and cpuset - Server Fault]]
+ [[https://www.kimullaa.com/entry/2020/07/01/200102][taskset と cgroup は何が違うのか - SIerだけど技術やりたいブログ]]
+ [[http://niyanchun.com/taskset-command.html][Linux下的绑核命令——taskset - NYC's Blog]]

* sched_setaffinity
  sched_setaffinity 可能受 cgroup 的影响绑核失败，在 Linux 中可以通过 cgroup 将进程划分在不同的 group 下，sched_setaffinity 亲和 CPU 时只能亲和同组的 CPU，跨组会失败。

  #+begin_quote
  EINVAL The affinity bit mask mask contains no processors that are
       currently physically on the system and permitted to the
       thread according to any restrictions that may be imposed
       by cpuset cgroups or the "cpuset" mechanism described in
       cpuset(7).
  [[https://man7.org/linux/man-pages/man2/sched_setaffinity.2.html][sched_setaffinity(2) - Linux manual page]]       
  #+end_quote

