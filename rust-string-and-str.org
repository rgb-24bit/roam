:PROPERTIES:
:ID:       6bab3527-ddf1-407e-9f97-b71e70b38b70
:END:
#+TITLE: rust String and str

+ Tag :: [[id:01CE5AAF-81ED-45AE-9667-930E9F0B04BC][Rust]]

这是在初学 rust 时容易遇到的一个问题（大概），很有可能写了一段代码，涉及到字符串的处理，结果因为没分清 String 和 str 导致编译失败 QAQ

首先，对于字符串字面量来说，和大多数语言一样，rust 会将它们放入进程地址空间的只读区域，我们持有的是对应字符串的一个切片 str，
由于 str 属于 unsize 类型，所以我们实际持有的就是 &str：
#+begin_src rust
  let my_str = "hello world!";  // my_str type is &str
#+end_src
  
需要记住：
+ str 是 String Slice，属于 usize 类型，因此实际使用是通常使用其引用形式 &str
+ 字符串字面量的类型为 &str，带上生命周期参数的话就是 &'static str

而 String，则是 rust 中实际拥有字符串所有权的类型，同时，实现了 =Deref<Target=str>= trait，因此，对于使用 &str 的场景，
可以传入 &String。

参考：
+ [[https://blog.thoughtram.io/string-vs-str-in-rust/][String vs &str in Rust | Articles by thoughtram]]
+ [[https://doc.rust-lang.org/std/string/struct.String.html#deref][std::string::String#Deref - Rust]]

