:PROPERTIES:
:ID:       c99f811b-8662-40eb-99dc-142d6b7f724e
:END:
#+TITLE: dup

内核使用三个相关的数据结构来表示打开的文件：
+ 文件描述符表（进程）：每个进程都有它独立的描述符表，表项由进程打开的文件描述符来索引
+ 文件表（内核）：打开的文件集合有一张文件表来表示，所有进程共享这张表。表项包含：当前的文件位置 k，引用计数，指向 v-node 表的指针。当引用计数为 0 时，会删除这个表项。
+ v-node 表：所有进程共享一张 v-node 表，包含 stat 结构中的大多数信息

使用 dup 函数时，返回的新文件描述符和传入的文件描述符使用同一个文件表项，这样，两个文件描述符就拥有相同的偏移量等信息，写一个文件描述符，另一个文件描述符也能感受到。

使用场景：I/O 重定向。比如需要将标准输出重定向到某个文件 A，那么可以打开文件后使用 =dup2(A, 1)= 将标准输出的文件描述符替换为文件 A 的，这样所有需要使用标准输出的地方都会自动将输出写入文件了。
高级语言中一般会提供全局的 Stdout 的对象，可以直接换成某个文件的 Writer，也就用不到 dup 了。

和 [[id:778bd149-4539-4500-ac3c-7f819579a7d7][linux pipe]] 不一样，pipe 的作用是关联两个文件描述符，一个输出是另一个的输入。而 dup 是替换文件描述符关联的目标。

