:PROPERTIES:
:ID:       BE0ED624-25B6-43E0-AED1-078FA2237114
:END:
#+TITLE: linux fs tools

* df
  磁盘使用情况统计：
  #+begin_example
    $ df -h
    Filesystem      Size  Used Avail Use% Mounted on
    udev            7.9G     0  7.9G   0% /dev
    tmpfs           1.6G   57M  1.6G   4% /run
    /dev/vda1       126G   84G   37G  70% /
    tmpfs           7.9G     0  7.9G   0% /dev/shm
    tmpfs           5.0M     0  5.0M   0% /run/lock
    tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
    tmpfs           1.6G     0  1.6G   0% /run/user/1000
  #+end_example

* du
  统计目录或者文件大小：
  #+begin_src bash
    # To show cumulative human-readable size:
    du -sh

    # To sort directories/files by size(human-readable):
    du -sh * | sort -rh
  #+end_src

* lsblk
  获取块设备信息：
  #+begin_src bash
    # To show all available block devices along with their partitioning schemes:
    lsblk

    # To show SCSI devices:
    lsblk --scsi

    # To show a specific device:
    lsblk /dev/sda

    # To verify TRIM support:
    # Check the values of DISC-GRAN (discard granularity) and DISC-MAX (discard max bytes) columns.
    # Non-zero values indicate TRIM support
    lsblk --discard

    # To fetch info about filesystems:
    lsblk --fs

    # For JSON, LIST or TREE output formats use the following flags:
    lsblk -J/--json
    lsblk -l/--list
    lsblk -T/--tree # default view
  #+end_src

* blkid
  显示关于可用块设备的信息：
  #+begin_src bash
    blkid  # 输出所有可用的设备、它们的通用唯一识别码（UUID）、文件系统类型以及卷标
  #+end_src

* fdisk
  磁盘分区管理：
  #+begin_example
    $ fdisk -l
    Disk /dev/vda: 40 GiB, 42949672960 bytes, 83886080 sectors
    Units: sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
    Disklabel type: dos
    Disk identifier: 0xe84cc148

    Device     Boot Start      End  Sectors Size Id Type
    /dev/vda1  *     2048 83886046 83883999  40G 83 Linux


    Disk /dev/vdb: 20 GiB, 21474836480 bytes, 41943040 sectors
    Units: sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 512 bytes
    I/O size (minimum/optimal): 512 bytes / 512 bytes
  #+end_example

* truncate
  truncate 可用于将文件缩小或扩展到指定的大小。如果文件大于指定的大小，则会丢失额外的数据。如果文件较短，则会对其进行扩展，并且扩展部分的读数为零字节：
  #+begin_example
    # To clear the contents from <file>:
    truncate -s 0 <file>

    # To truncate <file> to 100 bytes:
    truncate -s 100 <file>

    # To truncate <file> to 100 KB:
    truncate -s 100K <file>

    # (M, G, T, P, E, Z, and Y may be used in place of "K" as required.)
  #+end_example
