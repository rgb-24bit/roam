:PROPERTIES:
:ID:       5FADAF9C-DCA1-436D-8D8D-DA52BD35635D
:END:
#+TITLE: Strongly、Weakly、Statically、Dynamically Type

+ Tag :: [[id:67AE2BAB-CA63-42AC-AD19-1E1740677EB3][Type System]]

Program Errors:
+ trapped errors: 导致程序终止执行，如除 0，Java 中数组越界访问
+ untrapped errors: 出错后继续执行，但可能出现任意行为。如 C 里的缓冲区溢出、Jump 到错误地址

Forbidden Behaviours: 语言设计时，可以定义一组 forbidden behaviors。它必须包括所有 untrapped errors，但可能包含 trapped errors。

Well behaved、ill behaved:
+ well behaved: 如果程序执行不可能出现 forbidden behaviors，则为 well behaved
+ ill behaved: 否则为 ill behaved

强、弱类型：
+ 强类型 strongly typed: 如果一种语言的所有程序都是 well behaved —— 即不可能出现 forbidden behaviors，那么该语言为 strongly typed
+ 弱类型 weakly typed: 否则为 weakly typed。比如 C 语言的缓冲区溢出，属于 untrapped errors，即属于 forbidden behaviors，故 C 是弱类型

动态、静态类型：
+ 静态类型 statically: 如果在编译时拒绝 ill behaved 程序，则是 statically typed
+ 动态类型 dynamiclly: 如果在运行时拒绝 ill behaviors，则是 dynamiclly typed

Python 是强类型、动态类型的语言。

参考：
+ [[https://www.zhihu.com/question/19918532][弱类型、强类型、动态类型、静态类型语言的区别是什么？ - 知乎]]
+ [[https://en.wikipedia.org/wiki/Type_system][Type system - Wikipedia]]

